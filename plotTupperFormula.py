import numpy
import matplotlib.pyplot as plt

def tupper(x,y):
    return 0.5 < ((y // 17) // (2**(17 * x + y % 17))) % 2
 
#N = 4858450636189713423582095962494202044581400587983244549483093085061934704708809928450644769865524364849997247024915119110411605739177407856919754326571855442057210445735883681829823754139634338225199452191651284348332905131193199953502413758765239264874613394906870130562295813219481113685339535565290850023875092856892694555974281546386510730049106723058933586052544096664351265349363643957125565695936815184334857605266940161251266951421550539554519153785457525756590740540157929001765967965480064427829131488548259914721248506352686630476300
#N = 1234450636189713423582095962494202044581400587983244449483093085061934704708809928450644769865524364849997247024915119110411605739177407856919754326571855442057210445735883681829823754139634338225199452191651284348332905131193199953502413758765239264874613394906870130562295813219481113685339535565290850023875092856892694555974281546386510730049106723058933586052544096664351265349363643957125565695936815184334857605266940161251266951421550539554519153785457525756590740540157929001765967965480064427829131488548259914721248506352686630476300
#a = 18533182552158796547352452241608054686853221262609899338575615976687852701474012774739135622198225952712806103965544606191324257082474320005988067140548766270471304378316227961672165257073772712639887079918650939435192498424699293131663707539588556665840809685251698041947834585834255663529392275619683923155698345632116198459707687128725779542698943740035502156833542877539532236411347993303243009604955812948477327897308431813364063304515070639156214291256977534227313134982277647607287884488725773913958821911000371058022539282270126080

# binary representation
bin_unjoined = ['11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000',
                '11111111111111111',
                '00000000000000000']

b = ""
for i in bin_unjoined: b = b + i

# print the binary version
print(b)

# convert to base 10 and multiply by 17
a = int(b,2)*17

# print the result
print(a)

# convert back to binary and divide by 17
temp = bin(a // 17)[2:]

# print the result
print(temp)

# convert to base 10 and multiply by 17
N = int(temp,2)*17

print(N)

# convert 255 from binary
#print(int('11111111',2))

# "SEND"
#N = 1570085385313785655904981309911317993372317889082975235367369292943705541261219100004486300495405488649628334432431975655383910300839759281694815728750159898625446892411987237187174932677397992591094611974101942149135679094784

# "SEND NUDES"
N = 14189375905034089736542975870061019469007029063008466454883791593781495644115058073218169474212728538395591020240879037386648030016415818783161059712934507326109599725026377387925925874649190179373977478456822254305679090109770804421586133171386493064008955990072022406897027486087097354985979490425976251507924605295480366962897603338353231056237054539018637589741859474084028394099685256818448208366050892659246988189875838646418863407353434988439427038910428645483369513731350249427803639427567756925917364649227149601225619753671589888

x, y = numpy.meshgrid(numpy.arange(107), numpy.arange(N, N + 17)[::-1])
 
plt.imshow(tupper(x, y))
plt.show()
